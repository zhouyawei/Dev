//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.36373
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatViaWCFClient.WCFChat {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://eastmoney.com", ConfigurationName="WCFChat.IChat", CallbackContract=typeof(ChatViaWCFClient.WCFChat.IChatCallback))]
    public interface IChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://eastmoney.com/IChat/Login", ReplyAction="http://eastmoney.com/IChat/LoginResponse")]
        void Login(string userId, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://eastmoney.com/IChat/Login", ReplyAction="http://eastmoney.com/IChat/LoginResponse")]
        System.Threading.Tasks.Task LoginAsync(string userId, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://eastmoney.com/IChat/Logout", ReplyAction="http://eastmoney.com/IChat/LogoutResponse")]
        void Logout(string userId, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://eastmoney.com/IChat/Logout", ReplyAction="http://eastmoney.com/IChat/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string userId, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://eastmoney.com/IChat/SendMessage")]
        void SendMessage(string userId, string messageContet);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://eastmoney.com/IChat/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(string userId, string messageContet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://eastmoney.com/IChat/GetOnlineUserList", ReplyAction="http://eastmoney.com/IChat/GetOnlineUserListResponse")]
        string[] GetOnlineUserList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://eastmoney.com/IChat/GetOnlineUserList", ReplyAction="http://eastmoney.com/IChat/GetOnlineUserListResponse")]
        System.Threading.Tasks.Task<string[]> GetOnlineUserListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://eastmoney.com/IChat/ReceiveMessage")]
        void ReceiveMessage(string userId, string messageContent);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatChannel : ChatViaWCFClient.WCFChat.IChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatClient : System.ServiceModel.DuplexClientBase<ChatViaWCFClient.WCFChat.IChat>, ChatViaWCFClient.WCFChat.IChat {
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Login(string userId, string pwd) {
            base.Channel.Login(userId, pwd);
        }
        
        public System.Threading.Tasks.Task LoginAsync(string userId, string pwd) {
            return base.Channel.LoginAsync(userId, pwd);
        }
        
        public void Logout(string userId, string pwd) {
            base.Channel.Logout(userId, pwd);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string userId, string pwd) {
            return base.Channel.LogoutAsync(userId, pwd);
        }
        
        public void SendMessage(string userId, string messageContet) {
            base.Channel.SendMessage(userId, messageContet);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string userId, string messageContet) {
            return base.Channel.SendMessageAsync(userId, messageContet);
        }
        
        public string[] GetOnlineUserList() {
            return base.Channel.GetOnlineUserList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetOnlineUserListAsync() {
            return base.Channel.GetOnlineUserListAsync();
        }
    }
}
